version: "3.9"

name: finaptica-infra

networks:
  finaptica-net:
    name: finaptica-net
    driver: bridge

volumes:
  pg_data: {}
  prometheus_data: {}
  pgadmin_data: {}

services:
  postgres:
    image: postgres:16
    container_name: finaptica-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    command: >
      postgres -c shared_preload_libraries=pg_stat_statements
               -c max_connections=300
    ports:
      - "5432:5432"
    networks: [finaptica-net]
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 20

  otel-collector:
    image: otel/opentelemetry-collector:0.102.1
    container_name: finaptica-otel
    restart: unless-stopped
    command: ["--config=/etc/otelcol/config.yaml"]
    volumes:
      - ./otel-collector.yaml:/etc/otelcol/config.yaml:ro
    networks: [finaptica-net]
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP

  jaeger:
    image: jaegertracing/all-in-one:1.57
    container_name: finaptica-jaeger
    restart: unless-stopped
    networks: [finaptica-net]
    ports:
      - "16686:16686" # UI
    environment:
      COLLECTOR_OTLP_ENABLED: "true"

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: finaptica-prometheus
    restart: unless-stopped
    networks: [finaptica-net]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: finaptica-mailhog
    restart: unless-stopped
    networks: [finaptica-net]
    ports:
      - "8025:8025"  # UI
      - "1025:1025"  # SMTP

  pgadmin:
    image: dpage/pgadmin4:8.12
    container_name: finaptica-pgadmin
    restart: unless-stopped
    networks: [finaptica-net]
    ports:
      - "5050:80" 
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "True"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
